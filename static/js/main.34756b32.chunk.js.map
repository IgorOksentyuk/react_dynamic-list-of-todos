{"version":3,"sources":["types/selectStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SelectStatus","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","React","memo","setSelectedStatus","query","setQuery","onChange","event","target","value","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","loading","setLoading","errorMessage","setErrorMessage","userInfo","setUserInfo","useEffect","userId","user","catch","finally","href","email","name","App","todosFromServer","setTodosFromServer","selectedStatus","length","filteredTodos","normalisedQuery","toLowerCase","trim","filter","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34756b32.chunk.js","sourcesContent":["export enum SelectStatus {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered is-expanded\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={todo.id === selectedTodo?.id\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { SelectStatus } from '../../types/selectStatus';\n\ntype Props = {\n  setSelectedStatus: (value: SelectStatus) => void,\n  query: string,\n  setQuery: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  setSelectedStatus,\n  query,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setSelectedStatus(event.target.value as SelectStatus);\n            }}\n          >\n            <option\n              value={SelectStatus.all}\n            >\n              All\n            </option>\n            <option\n              value={SelectStatus.active}\n            >\n              Active\n            </option>\n            <option\n              value={SelectStatus.completed}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {\n            query && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                aria-label=\"clear\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            )\n          }\n\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | undefined) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userInfo, setUserInfo] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(selectedTodo?.userId)\n      .then(user => setUserInfo(user))\n      .catch(() => setErrorMessage('Error while getting todo info!'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loading && <Loader />}\n\n      {!loading && !errorMessage && userInfo !== null\n        && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setSelectedTodo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {\n                  selectedTodo?.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>\n                }\n                {' by '}\n\n                <a href={`mailto:${userInfo?.email}`}>\n                  {userInfo?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n\n      {errorMessage && (\n        <p className=\"notification is-danger has-text-centered\">\n          {errorMessage}\n        </p>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { SelectStatus } from './types/selectStatus';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedStatus, setSelectedStatus] = useState(SelectStatus.all);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(todos => setTodosFromServer(todos))\n      .catch(() => setErrorMessage('Try again later!'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const getFilteredTodos = (todos: Todo[]) => {\n    let filteredTodos = [...todos];\n    const normalisedQuery = query.toLowerCase().trim();\n\n    if (normalisedQuery) {\n      filteredTodos = filteredTodos.filter(\n        todo => todo.title.toLowerCase().includes(normalisedQuery),\n      );\n    }\n\n    switch (selectedStatus) {\n      case SelectStatus.active:\n        return filteredTodos.filter(todo => !todo.completed);\n\n      case SelectStatus.completed:\n        return filteredTodos.filter(todo => todo.completed);\n\n      default:\n        return filteredTodos;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedStatus={setSelectedStatus}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              {\n                !loading && !errorMessage && todosFromServer.length > 0\n                && (\n                  <TodoList\n                    todos={getFilteredTodos(todosFromServer)}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )\n              }\n\n              {errorMessage && (\n                <p className=\"notification is-danger has-text-centered\">{errorMessage}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        selectedTodo && (\n          <TodoModal\n            setSelectedTodo={setSelectedTodo}\n            selectedTodo={selectedTodo}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}